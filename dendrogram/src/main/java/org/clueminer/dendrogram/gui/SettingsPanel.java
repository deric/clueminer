package org.clueminer.dendrogram.gui;

import org.clueminer.dendrogram.DendrogramViewer;

/**
 *
 * @author deric
 */
public class SettingsPanel extends javax.swing.JPanel {

    private static final long serialVersionUID = 4032782319733814128L;
    private DendrogramViewer viewer;

    /**
     * Creates new form SettingsPanel
     */
    public SettingsPanel() {
        initComponents();
    }

    public SettingsPanel(DendrogramViewer v) {
        initComponents();
        setViewer(v);
    }

    public final void setViewer(DendrogramViewer v) {
        viewer = v;
        // slideCellWidth.setValue(viewer.getCellWidth());
        // slideCellHeight.setValue(viewer.getCellHeight());
        chckShowHorizontal.setSelected(viewer.isHorizontalTreeVisible());
        chckShowVertical.setSelected(viewer.isVerticalTreeVisible());
        chckShowLegend.setSelected(viewer.isLegendVisible());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbLineHeight = new javax.swing.JLabel();
        slideCellHeight = new javax.swing.JSlider();
        lbCellWidth = new javax.swing.JLabel();
        slideCellWidth = new javax.swing.JSlider();
        chckFitToPanel = new javax.swing.JCheckBox();
        chckShowHorizontal = new javax.swing.JCheckBox();
        chckShowVertical = new javax.swing.JCheckBox();
        chckShowLabels = new javax.swing.JCheckBox();
        chckShowLegend = new javax.swing.JCheckBox();

        lbLineHeight.setText(org.openide.util.NbBundle.getMessage(SettingsPanel.class, "SettingsPanel.lbLineHeight.text")); // NOI18N

        slideCellHeight.setMinimum(1);
        slideCellHeight.setValue(10);
        slideCellHeight.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                slideCellHeightStateChanged(evt);
            }
        });

        lbCellWidth.setText(org.openide.util.NbBundle.getMessage(SettingsPanel.class, "SettingsPanel.lbCellWidth.text")); // NOI18N

        slideCellWidth.setMinimum(5);
        slideCellWidth.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                slideCellWidthStateChanged(evt);
            }
        });

        chckFitToPanel.setText(org.openide.util.NbBundle.getMessage(SettingsPanel.class, "SettingsPanel.chckFitToPanel.text")); // NOI18N
        chckFitToPanel.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                chckFitToPanelStateChanged(evt);
            }
        });
        chckFitToPanel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chckFitToPanelActionPerformed(evt);
            }
        });

        chckShowHorizontal.setText(org.openide.util.NbBundle.getMessage(SettingsPanel.class, "SettingsPanel.chckShowHorizontal.text")); // NOI18N
        chckShowHorizontal.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                chckShowHorizontalStateChanged(evt);
            }
        });
        chckShowHorizontal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chckShowHorizontalActionPerformed(evt);
            }
        });

        chckShowVertical.setText(org.openide.util.NbBundle.getMessage(SettingsPanel.class, "SettingsPanel.chckShowVertical.text")); // NOI18N
        chckShowVertical.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                chckShowVerticalStateChanged(evt);
            }
        });

        chckShowLabels.setSelected(true);
        chckShowLabels.setText(org.openide.util.NbBundle.getMessage(SettingsPanel.class, "SettingsPanel.chckShowLabels.text")); // NOI18N
        chckShowLabels.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                chckShowLabelsStateChanged(evt);
            }
        });

        chckShowLegend.setText(org.openide.util.NbBundle.getMessage(SettingsPanel.class, "SettingsPanel.chckShowLegend.text")); // NOI18N
        chckShowLegend.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                chckShowLegendStateChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbLineHeight)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(slideCellHeight, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbCellWidth)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(chckFitToPanel)
                            .addComponent(slideCellWidth, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(chckShowHorizontal)
                        .addGap(18, 18, 18)
                        .addComponent(chckShowLegend))
                    .addComponent(chckShowVertical)
                    .addComponent(chckShowLabels))
                .addContainerGap(154, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(chckShowHorizontal)
                        .addComponent(chckShowLegend))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(slideCellHeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lbLineHeight)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lbCellWidth)
                            .addComponent(slideCellWidth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(chckFitToPanel))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(chckShowVertical)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(chckShowLabels)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void slideCellHeightStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_slideCellHeightStateChanged
        if (viewer != null) {
            viewer.setCellHeight(slideCellHeight.getValue(), slideCellHeight.getValueIsAdjusting());
        }
    }//GEN-LAST:event_slideCellHeightStateChanged

    private void slideCellWidthStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_slideCellWidthStateChanged
        if (viewer != null) {
            viewer.setCellWidth(slideCellWidth.getValue(), slideCellWidth.getValueIsAdjusting());
        }
    }//GEN-LAST:event_slideCellWidthStateChanged

    private void chckFitToPanelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chckFitToPanelActionPerformed
        if(viewer != null){
            viewer.setFitToPanel(!viewer.isFitToPanel());
        }
    }//GEN-LAST:event_chckFitToPanelActionPerformed

    private void chckFitToPanelStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_chckFitToPanelStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_chckFitToPanelStateChanged

    private void chckShowHorizontalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chckShowHorizontalActionPerformed
    }//GEN-LAST:event_chckShowHorizontalActionPerformed

    private void chckShowHorizontalStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_chckShowHorizontalStateChanged
        if (viewer != null) {
            viewer.setHorizontalTreeVisible(chckShowHorizontal.isSelected());
        }
    }//GEN-LAST:event_chckShowHorizontalStateChanged

    private void chckShowVerticalStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_chckShowVerticalStateChanged
        if (viewer != null) {
            viewer.setVerticalTreeVisible(chckShowVertical.isSelected());
        }
    }//GEN-LAST:event_chckShowVerticalStateChanged

    private void chckShowLabelsStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_chckShowLabelsStateChanged
        if (viewer != null) {
            viewer.setLabelsVisible(chckShowLabels.isSelected()
        
    );
        }
    }//GEN-LAST:event_chckShowLabelsStateChanged

    private void chckShowLegendStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_chckShowLegendStateChanged
        if (viewer != null) {
            viewer.setLegendVisible(chckShowLegend.isSelected());
        }
    }//GEN-LAST:event_chckShowLegendStateChanged
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox chckFitToPanel;
    private javax.swing.JCheckBox chckShowHorizontal;
    private javax.swing.JCheckBox chckShowLabels;
    private javax.swing.JCheckBox chckShowLegend;
    private javax.swing.JCheckBox chckShowVertical;
    private javax.swing.JLabel lbCellWidth;
    private javax.swing.JLabel lbLineHeight;
    private javax.swing.JSlider slideCellHeight;
    private javax.swing.JSlider slideCellWidth;
    // End of variables declaration//GEN-END:variables
}
