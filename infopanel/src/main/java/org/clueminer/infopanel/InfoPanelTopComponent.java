package org.clueminer.infopanel;

import java.awt.GridBagConstraints;
import java.awt.Insets;
import java.io.IOException;
import org.clueminer.events.ProjectEvent;
import org.clueminer.events.ProjectListener;
import org.clueminer.rtca.Plate;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.util.Exceptions;
import org.openide.util.NbBundle.Messages;
import org.openide.windows.TopComponent;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(dtd = "-//org.clueminer.infopanel//InfoPanel//EN",
autostore = false)
@TopComponent.Description(preferredID = "InfoPanelTopComponent",
iconBase = "org/clueminer/infopanel/info16.png",
persistenceType = TopComponent.PERSISTENCE_ALWAYS)
@TopComponent.Registration(mode = "properties", openAtStartup = true)
@ActionID(category = "Window", id = "org.clueminer.infopanel.InfoPanelTopComponent")
@ActionReference(path = "Menu/Window" /*
 * , position = 333
 */)
@TopComponent.OpenActionRegistration(displayName = "#CTL_InfoPanelAction",
preferredID = "InfoPanelTopComponent")
@Messages({
    "CTL_InfoPanelAction=InfoPanel",
    "CTL_InfoPanelTopComponent=InfoPanel Window",
    "HINT_InfoPanelTopComponent=This is a InfoPanel window"
})
public final class InfoPanelTopComponent extends TopComponent implements ProjectListener {

    private static final long serialVersionUID = 2614692318647805746L;
    private InfoTable table;

    public InfoPanelTopComponent() {
        initComponents();
        setName(Bundle.CTL_InfoPanelTopComponent());
        setToolTipText(Bundle.HINT_InfoPanelTopComponent());
        table = new InfoTable();
        add(table, new GridBagConstraints(0, 0, 1, 1, 1.0, 1.0, GridBagConstraints.NORTHWEST, GridBagConstraints.BOTH, new Insets(0, 0, 0, 0), 0, 0));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setLayout(new java.awt.GridBagLayout());
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
    @Override
    public void componentOpened() {
        // TODO add custom code on component opening
    }

    @Override
    public void componentClosed() {
        // TODO add custom code on component closing
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }

    @Override
    public void projectClosed() {
        System.out.println("info panel: project closed");
        table.clear();
    }
    
    
    @Override
    public void projectOpened(ProjectEvent evt) {
      /*  IChartData cd = ((IProjectFrame) evt.getSource()).getChartData();
        Plate plate = (Plate) cd.getVisible();
        try {
            table.setData(plate.getProperties());
        } catch (IOException ex) {
            Exceptions.printStackTrace(ex);
        }*/
    }
}
